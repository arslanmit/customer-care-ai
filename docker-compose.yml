services:
  # Rasa Server
  rasa:
    image: rasa/rasa:3.6.20-full
    platform: linux/amd64

    command: ["run", "--enable-api", "--debug", "--cors", "*", "--credentials", "/app/credentials.yml", "--endpoints", "/app/endpoints.yml", "--model", "/app/models/latest_rasa_model.tar.gz"]
    ports:
      - "5005:5005"
    volumes:
      - ./backend/rasa/models:/app/models
      - ./backend/rasa/config.yml:/app/config.yml
      - ./backend/rasa/domain.yml:/app/domain.yml
      - ./backend/rasa/endpoints.yml:/app/endpoints.yml
      - ./backend/rasa/credentials.yml:/app/credentials.yml
      - ./backend/rasa/data:/app/data
    environment:

      - RASA_ENVIRONMENT=development
      - RASA_TELEMETRY_ENABLED=false
      - RASA_ACTIONS_URL=http://actions:5055/webhook
      - CORS_ORIGINS='["*"]'
      - SANIC_WORKERS=2
      - SANIC_NUM_WORKERS=2
      - SANIC_REQUEST_TIMEOUT=300
      - SANIC_KEEP_ALIVE_TIMEOUT=60
      - PYTHONUNBUFFERED=1
      - TF_CPP_MIN_LOG_LEVEL=2
      - RASA_LOG_LEVEL=DEBUG
      - RASA_CONSOLE_OUTPUT_VERBOSITY=DEBUG
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; import urllib.request; sys.exit(0) if urllib.request.urlopen('http://localhost:5005/status', timeout=10).getcode() == 200 else sys.exit(1)"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 120s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 8G
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    networks:
      - rasa-network

  # Rasa Actions Server
  actions:
    build:
      context: .
      dockerfile: backend/rasa/actions/Dockerfile
    platform: linux/amd64
    volumes:
      - ./backend/rasa/actions:/app/actions
      - ./backend/rasa/endpoints.yml:/app/endpoints.yml
    environment:
      - PYTHONPATH=/app
      - RASA_ACTIONS_SANIC_WORKERS=2
      - SANIC_WORKERS=2
      - SANIC_REQUEST_TIMEOUT=300
      - PYTHONUNBUFFERED=1
    command: ["start", "--actions", "actions.actions"]
    expose:
      - "5055"
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; import urllib.request; sys.exit(0) if urllib.request.urlopen('http://localhost:5055/health', timeout=5).getcode() == 200 else sys.exit(1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - rasa-network
      
  # Web Interface
  web-interface:
    build:
      context: ./web-interface
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./web-interface:/app
    environment:
      - NODE_ENV=production
      - RASABOT_HOST=rasa
      - RASABOT_PORT=5005
      - NODE_OPTIONS=--max-old-space-size=512
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - rasa-network
    depends_on:
      rasa:
        condition: service_healthy
      actions:
        condition: service_healthy

  jaeger:
    image: jaegertracing/all-in-one:1.57
    platform: linux/amd64
    ports:
      - "16686:16686"
      - "6831:6831/udp"
    networks:
      - rasa-network
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411

networks:
  rasa-network:
    driver: bridge
