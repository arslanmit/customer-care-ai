version: "3.8"

services:
  # Rasa Core Service
  rasa:
    image: rasa/rasa:3.6.0-full
    ports:
      - "5005:5005"
    volumes:
      - ./models:/app/models
      - ./config:/app/config
      - ./domain.yml:/app/domain.yml
      - ./credentials.yml:/app/credentials.yml
      - ./endpoints.yml:/app/endpoints.yml
    environment:
      - RASA_ENVIRONMENT=production
      - RASA_TELEMETRY_ENABLED=false
      - RASA_ACTIONS_URL=http://actions:5055/webhook
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
    networks:
      - rasa-network

  # Rasa Actions Server
  actions:
    image: rasa/rasa-sdk:3.6.0
    volumes:
      - ./actions:/app/actions
    environment:
      - RASA_ACTIONS_SANIC_WORKERS=2
    expose:
      - "5055"
    restart: unless-stopped
    networks:
      - rasa-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
      - REACT_APP_RASA_URL=/api
    restart: unless-stopped
    depends_on:
      - nginx
    networks:
      - rasa-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.21-alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/usr/share/nginx/html
    depends_on:
      - rasa
    restart: unless-stopped
    networks:
      - rasa-network

  # Redis for Rasa Tracker Store
  redis:
    image: redis:6.2-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - rasa-network

  # PostgreSQL for Rasa Tracker Store
  postgres:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=rasa
      - POSTGRES_PASSWORD=your-secure-password
      - POSTGRES_DB=rasa
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - rasa-network

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped
    networks:
      - rasa-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - rasa-network

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  rasa-network:
    driver: bridge
