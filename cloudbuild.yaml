steps:
  # Fetch the service account key from Secret Manager
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'fetch-sa-key'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud secrets versions access latest --secret="gcp-key" --project="$PROJECT_ID" > /workspace/cloudbuild-sa.json
    waitFor: ['-']

  # Build the container image with buildkit (NO CACHING)
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build'
    waitFor: ['fetch-sa-key']
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Set up Docker Buildx
        docker buildx create --use
        
        # Build without GCS caching for diagnostics
        docker buildx build \
          --platform linux/amd64 \
          -t gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$BUILD_ID \
          -t gcr.io/$PROJECT_ID/${_SERVICE_NAME}:latest \
          --build-arg PROJECT_ID=$PROJECT_ID \
          --push \
          .
    env:
      - 'DOCKER_BUILDKIT=1'
      - 'COMPOSE_DOCKER_CLI_BUILD=1'

  # Verify the built image by importing absl.testing directly
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'run'
      - '--rm'
      - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$BUILD_ID'
      - 'python'
      - '-c'
      - 'import absl.testing; print("Successfully imported absl.testing")'
    id: 'verify'
    waitFor: ['build']

  # Pre-process cloudrun.yaml to substitute variables
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'preprocess-cloudrun-yaml'
    entrypoint: 'bash'
    args: ['./scripts/preprocess.sh']
    env:
      - '_GCR_HOSTNAME=${_GCR_HOSTNAME}'
      - '_SERVICE_NAME=${_SERVICE_NAME}'
      - '_SERVICE_ACCOUNT=${_SERVICE_ACCOUNT}'
      - '_CLOUDSQL_INSTANCE=${_CLOUDSQL_INSTANCE}'
    waitFor: ['verify']

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-rasa'
    args:
      - 'run'
      - 'services'
      - 'replace'
      - 'cloudrun-processed.yaml'
      - '--region=$_REGION'
      - '--project=$PROJECT_ID'
      - '--platform=managed'
      - '--quiet'
    env:
      - 'CLOUDSDK_CORE_DISABLE_PROMPTS=1'
      - 'CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE=/workspace/cloudbuild-sa.json'
    waitFor: ['preprocess-cloudrun-yaml']
    
  # Update environment variables for the Cloud Run service
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'update-service-env'
    entrypoint: 'bash'
    args: ['./scripts/update_env.sh']
    env:
      - '_SERVICE_NAME=${_SERVICE_NAME}'
      - '_REGION=${_REGION}'
      - 'CLOUDSDK_CORE_DISABLE_PROMPTS=1'
      - 'CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE=/workspace/cloudbuild-sa.json'
    waitFor: ['deploy-rasa']

# Options for the build
options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

# Timeout for the build (in seconds)
timeout: 3600s  # 60 minutes

# Store images in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:latest'

# Add substitutions that can be used in build steps
substitutions:
  _SERVICE_NAME: 'customer-care-ai'
  _REGION: 'europe-west1'
  _GCR_HOSTNAME: 'gcr.io'
  _SERVICE_ACCOUNT: 'customer-care-ai@${PROJECT_ID}.iam.gserviceaccount.com'
  _CLOUDSQL_INSTANCE: '${PROJECT_ID}:${_REGION}:customer-care-ai-db'

# Add tags for better organization and filtering
tags:
  - 'rasa'
  - 'customer-care-ai'
  - 'production'
  - 'gcr'