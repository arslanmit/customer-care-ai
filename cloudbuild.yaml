# Enhanced cloudbuild.yaml with best practices
steps:
  # Build the container image with caching
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '--cache-from'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/app:latest'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/app:$SHORT_SHA'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/app:latest'
      - '.'

  # Push the container images to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/app:$SHORT_SHA']
  
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/app:latest']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/app:$SHORT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '${_PORT}'
      - '--set-env-vars'
      - 'PORT=${_PORT}'

# Store images in Artifact Registry
images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/app:$SHORT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/app:latest'

# Timeout after 20 minutes
timeout: 1200s

# Tags for the build
tags:
  - '${_SERVICE_NAME}'
  - 'cloud-run'

# Default substitutions
substitutions:
  _REGION: europe-west1
  _SERVICE_NAME: customer-care-ai
  _REPOSITORY: customer-care-ai
  _PORT: '5005'
